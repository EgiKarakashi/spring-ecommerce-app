name: backend ci template

on:
  workflow_call:
    inputs:
      service:
        required: true
        type: string
      docker-context:
        required: false
        type: string
        default: ""
      docker-tags:
        required: false
        type: string
        default: ""
      build-command:
        required: false
        type: string
        default: ""
    secrets:
      ghcr_token:
        required: false
      acr_login_server:
        required: false
      acr_username:
        required: false
      acr_password:
        required: false

jobs:
  backend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      pull-requests: write
    env:
      SERVICE: ${{ inputs.service }}
      IS_INTERNAL: ${{ github.event_name != 'pull_request' || (github.event.pull_request && github.event.pull_request.head.repo.full_name == github.repository) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'microsoft'
          cache: 'maven'

      - name: Install common-library
        if: ${{ inputs.service != 'common-library' }}
        run: mvn -pl common-library -am clean install -DskipTests

      - name: Build and Test
        run: |
          if [ -n "${{ inputs.build-command }}" ]; then
            eval "${{ inputs.build-command }}"
          else
            mvn -pl ${{ inputs.service }} -am clean verify
          fi

      - name: Run Checkstyle
        if: ${{ env.IS_INTERNAL == 'true' }}
        run: mvn checkstyle:checkstyle -pl ${{ inputs.service }} -am -Dcheckstyle.output.file=${{ env.SERVICE }}-checkstyle.result.xml

      - name: Upload Checkstyle
        if: ${{ env.IS_INTERNAL == 'true' }}
        uses: jwgmeligmeyling/checkstyle-github-action@master
        with:
          path: "**/${{ env.SERVICE }}-checkstyle.result.xml"

      - name: OWASP Dependency Check
        if: ${{ env.IS_INTERNAL == 'true' }}
        continue-on-error: true
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: spring-ecommerce-app-${{ env.SERVICE }}
          path: "."
          format: HTML

      - name: Upload Dependency Check Report
        if: ${{ env.IS_INTERNAL == 'true' }}
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-${{ env.SERVICE }}
          path: reports

      - name: Login to Container Registry
        if: ${{ inputs.docker-tags != '' && github.ref == 'refs/heads/main' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Image
        if: ${{ inputs.docker-tags != '' && github.ref == 'refs/heads/main' }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.docker-context != '' && inputs.docker-context || format('./{0}', inputs.service) }}
          push: true
          tags: ${{ inputs.docker-tags }}
