version: "3.9"

services:
  nginx:
    image: nginx:1.27.2
    restart: unless-stopped
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - ./nginx/configuration/custom_proxy_settings.conf:/etc/nginx/conf.d/customer_proxy_settings.conf
    ports:
      - "80:80"
    networks:
      - ecommerce-network
  identity:
    image: quay.io/keycloak/keycloak:26.0.2
    command: 'start-dev --import-realm'
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD: admin
      KC_HTTP_PORT: 80
    volumes:
      - ./identity/realm-export.json:/opt/keycloak/data/import/realm-export.json
      - ./identity/themes/ecommerce/theme:/opt/keycloak/themes
    networks:
      - ecommerce-network
  swagger-ui:
    image: swaggerapi/swagger-ui:v5.17.14
    environment:
      - BASE_URL=/swagger-ui
      - URLS
      - OAUTH_CLIENT_ID=swagger-ui
      - OAUTH_USE_PKCE=true
  postgres:
    build: ./docker/postgres
    image: spring-ecommerce-postgres:latest
    hostname: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./docker/postgres/postgresql.conf.sample:/usr/share/postgresql/postgresql.conf.sample
      - ./postgres_init.sql:/docker-entrypoint-initdb.d/postgres_init.sql
      - postgres:/var/lib/postgresql/data
    command: postgres -c 'max_connections=500'
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    networks:
      - ecommerce-network
  zookeeper:
    image: debezium/zookeeper:2.7.3.Final
    restart: always
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    networks:
      - ecommerce-network
  kafka:
    image: confluentinc/cp-kafka:7.7.1
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - ecommerce-network
  kafka-connect:
    image: debezium/connect:2.7.3.Final
    restart: always
    ports:
      - "8083:8083"
      - "5005:5005"
    depends_on:
      - kafka
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=kafka_connect_configs
      - OFFSET_STORAGE_TOPIC=kafka_connect_config
    networks:
      - ecommerce-network
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    environment:
      DYNAMIC_KAFKA_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    ports:
     - "8089:8080"
    depends_on:
      - kafka
      - kafka-connect
    networks:
      - ecommerce-network
  redis:
    image: redis:7.4.1-alpine
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - redis:/data
    networks:
      - ecommerce-network

networks:
  ecommerce-network:
    driver: bridge
    name: ecommerce-network

volumes:
  postgres:
  redis:

