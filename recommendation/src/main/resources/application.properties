server.port=7095
server.servlet.context-path=/recommendation

spring.application.name=recommendation
spring.threads.virtual.enabled=true
management.tracing.sampling.probability=1.0
management.endpoints.web.exposure.include=prometheus
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.tags.application=${spring.application.name}

logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

spring-ecommerce-app.services.product=http://localhost:7080/product
spring-ecommerce-app.services.customer=http://localhost:7088/customer
spring-ecommerce-app.services.order=http://localhost:7085/order

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/recommendation
spring.datasource.username=postgres
spring.datasource.password=postgres

spring.ai.vectorstore.pgvector.initialize-schema=true
spring.ai.vectorstore.pgvector.dimensions=1536
spring.ai.vectorstore.pgvector.index-type=HNSW
spring.ai.vectorstore.pgvector.distance-type=COSINE_DISTANCE

# Kafka Producer
spring.kafka.producer.bootstrap-servers=kafka:9092
spring.kafka.producer.key-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Azure AI configuration
spring.ai.azure.openai.api-key=${SPRING_AI_AZURE_OPENAI_API_KEY}
spring.ai.azure.openai.endpoint=${SPRING_AI_AZURE_OPENAI_ENDPOINT}
spring.ai.azure.openai.embedding.options.model=${SPRING_AI_AZURE_OPENAI_EMBEDDING_OPTIONS_MODEL}

# swagger-ui custom path
springdoc.swagger-ui.path=/swagger-ui
springdoc.packagesToScan=com.ecommerce.app.springecommerceapp.recommendation
springdoc.swagger-ui.oauth.use-pkce-with-authorization-code-grant=true
springdoc.swagger-ui.oauth.client-id=swagger-ui

# OAuth2 Config
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/Ecommerce
springdoc.oauthflow.authorization-url=http://localhost:8181/realms/Ecommerce/protocol/openid-connect/auth
springdoc.oauthflow.token-url=http://localhost:8181/realms/Ecommerce/protocol/openid-connect/token

# Kafka CDC Topic config
product.topic.name=dbproduct.public.product

# Kafka Consumer
spring.kafka.consumer.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=recommendation
spring.aop.proxy-target-class=true

# Similarity Search Config
com.ecommerce.app.springecommerceapp.recommendation.embedding-based.search.topK=10
com.ecommerce.app.springecommerceapp.recommendation.embedding-based.search.initDefaultData=false
com.ecommerce.app.springecommerceapp.recommendation.embedding-based.search.similarityThreshold=0
